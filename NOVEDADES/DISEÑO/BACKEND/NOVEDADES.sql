CREATE TABLE USUARIO (
  idUSUARIO INTEGER  NOT NULL,
  NOMBRE TEXT,
  ROL INTEGER,
  PRIMARY KEY(idUSUARIO)
);

CREATE TABLE "AMBIENTE" (
	"idAMBIENTE"	INTEGER NOT NULL,
	"NOMBRE"	TEXT,
	"IDCUENTADANTE"	INTEGER,
	FOREIGN KEY("IDCUENTADANTE") REFERENCES "USUARIO"("idUSUARIO") ON DELETE NO ACTION ON UPDATE NO ACTION,
	PRIMARY KEY("idAMBIENTE")
);

CREATE TABLE EQUIPAMIENTO (
  idEQUIPAMIENTO INTEGER  NOT NULL ,
  idAMBIENTE INTEGER,
  NOMBRE TEXT NULL,
  ESTADO INTEGER NULL,
  SERIAL TEXT NULL,
  ESTACION INTEGER,
  PRIMARY KEY(idEQUIPAMIENTO),
  FOREIGN KEY(idAMBIENTE)
    REFERENCES AMBIENTE(idAMBIENTE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE "NOVEDADES" (
	"idNOVEDADES"	INTEGER,
	"idAMBIENTE"	INTEGER,
	"FECHA"	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"DESCRIPCION"	TEXT,
	"ESTADO"	INTEGER DEFAULT 0,
	FOREIGN KEY("idAMBIENTE") REFERENCES "AMBIENTE"("idAMBIENTE"),
	PRIMARY KEY("idNOVEDADES")
);

CREATE TABLE HNOVEDAD (
  idHNOVEDAD INTEGER  NOT NULL ,
  idNOVEDADES INTEGER  NOT NULL,
  FECHA DATE NULL,
  DESCRIPCION TEXT NULL,
  PRIMARY KEY(idHNOVEDAD, idNOVEDADES),
  FOREIGN KEY(idNOVEDADES)
    REFERENCES NOVEDADES(idNOVEDADES)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

create view vambiente as
select n.idnovedades,
n.idambiente,
a.idcuentadante,
a.nombre AMBIENTE,
n.fecha,n.descripcion,CASE WHEN n.estado=0 THEN 'ABIERTA'
WHEN n.estado=1 THEN 'PROCESO'
WHEN n.estado=2 THEN 'CERRADA' END ESTADO,c.nombre CUENTADANTE from novedades n
join ambiente a  
using(idambiente)
join usuario c
on(a.idcuentadante=c.idusuario) 


CREATE VIEW EQUIRESUMEN AS
SELECT E.IDAMBIENTE,A.NOMBRE AMBIENTE,E.NOMBRE TIPO,COUNT(*) CANTIDAD
FROM EQUIPAMIENTO E
JOIN AMBIENTE A
USING(IDAMBIENTE)
GROUP BY E.IDAMBIENTE,E.NOMBRE